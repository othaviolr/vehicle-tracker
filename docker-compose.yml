services:
  postgres:
    image: postgres:16-alpine
    container_name: vehicletracker-db
    environment:
      POSTGRES_DB: VehicleTrackerDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - vehicletracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: VehicleTracker.API/Dockerfile
    container_name: vehicletracker-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=VehicleTrackerDB;Username=postgres;Password=postgres
    ports:
      - "5000:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vehicletracker-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vehicletracker-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@vehicletracker.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - vehicletracker-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:

networks:
  vehicletracker-network:
    driver: bridge